root_dir: '/home/chrstphr/projects/ecGAN/result'
exp_dir: 'cgan'

device: 'gpu'
device_id: 'auto'
debug: False

batch_size: 64
nepochs: 10
start_epoch: 0
save_freq: 5

init: False

feature_matching: False
semi_supervised: True
fuzzy_labels: False

data:
  func: 'mnist'
  args: []
  kwargs:
    train: True
    bbox: [0,1]
    labels: NULL
  bbox: [0,1]

model: 'CGAN'
net_file: '${root_dir}/${exp_dir}/net.py'
nets:
  generator:
    type: 'MYTCN28'
    name: 'Gen'
    kwargs:
      numhid: 64
      patest: 'linear'
    param: '${root_dir}/${exp_dir}/params/${model}.${nets.generator.type}.${nets.generator.name}.${start_epoch}.params'
    save: '${root_dir}/${exp_dir}/params/${model}.${nets.generator.type}.${nets.generator.name}.${epoch}.params'
    optimizer: 'adam'
    optkwargs:
      learning_rate: 0.0001
  discriminator:
    type: 'MSCN28'
    name: 'Dis'
    kwargs:
      numhid: 64
      outnum: 20
      patest: 'linear'
    param: '${root_dir}/${exp_dir}/params/${model}.${nets.discriminator.type}.${nets.discriminator.name}.${start_epoch}.params'
    save: '${root_dir}/${exp_dir}/params/${model}.${nets.discriminator.type}.${nets.discriminator.name}.${epoch}.params'
    optimizer: 'adam'
    optkwargs:
      learning_rate: 0.0001

log: '${root_dir}/${exp_dir}/log/${model}.log'
gen_freq: 5
genout: '${root_dir}/${exp_dir}/gen/${model}.${nets.generator.type}.${epoch}.png'

cmap: 'coldnhot'

pattern:
  top_net: 'classifier'
  type: 'pattern'
  name: 'linear'
  save: '${root_dir}/${exp_dir}/params/${model}.${net_type}.${net_name}.${pattern.name}.${fit_epoch}.${ase_epoch}.pattern.params'
  load: '${root_dir}/${exp_dir}/params/${model}.${net_type}.${net_name}.${pattern.name}.${pattern.start_epoch}.${pattern.aepoch}.pattern.params'
  output:  '${root_dir}/${exp_dir}/rel/${pattern.type}/${model}.${nets.generator.type}.${start_epoch}.${pattern.name}.${pattern.start_epoch}.${data_desc}.${iter}.h5'
  image:  '${root_dir}/${exp_dir}/rel/${pattern.type}/${model}.${nets.generator.type}.${start_epoch}.${pattern.name}.${pattern.start_epoch}.${data_desc}.${cmap}.${iter}.png'
  input:  '${root_dir}/${exp_dir}/rel/${pattern.type}/${model}.${data_desc}.${iter}.png'
  start_epoch: 0
  aepoch: 0
  nepochs: 10
  save_freq: 5
  optimizer: 'adam'
  optkwargs:
      learning_rate: 0.0001

explanation:
  method: 'dtd'
  top_net: 'discriminator'
  # output: '${root_dir}/${exp_dir}/rel/${model}.${nets.discriminator.type}.${epoch}.${explanation.method}.${iter}.h5'
  output: NULL
  image:  '${root_dir}/${exp_dir}/rel/${model}.${nets.discriminator.type}.${epoch}.${explanation.method}.${data_desc}.${iter}.png'
  input:  '${root_dir}/${exp_dir}/rel/${model}.${data_desc}.${iter}.png'
