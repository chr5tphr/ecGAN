root_dir: '/home/chrstphr/projects/ecGAN/result'
exp_dir: 'cgan_pos' #'cgan'

device: 'gpu'
device_id: 3
#device_id: 'auto'
debug: True

batch_size: 64
nepochs: 400
start_epoch: 0
save_freq: 5

init: False

feature_matching: False
semi_supervised: True
fuzzy_labels: False
#clip_penalty: 0.001

data:
    func: 'cifar10' #'mnist'
    args: []
    kwargs:
        train: True
        bbox: [-1.,1.]
        labels: [0, 1, 2, 3, 4]
    bbox: [-1.,1.]

#data:
#    func: 'toydata'
#    args: []
#    kwargs:
#        train: True
#        N: 1000
#        bbox: [0.,1.]
#    bbox: [0.,1.]

model: 'CGAN'
net_file: '${root_dir}/${exp_dir}/net.py'
nets:
    generator:
        type: 'MYTCN32' #'MYTCN28
        name: 'Gen'
        kwargs:
            numhid: 64 #64
            outnum: 3 #1
            use_bias: True
            outact: 'tanh' # 'clip'
            clip: [-1., 1.]
        epoch: 400
        param: '${root_dir}/${exp_dir}/${data.func}/params/${nets.generator.type}.${nets.generator.name}.${nets.generator.epoch}.params'
        save: '${root_dir}/${exp_dir}/${data.func}/params/${nets.generator.type}.${nets.generator.name}.${epoch}.params'
        optimizer: 'adam'
        optkwargs:
            learning_rate: 0.00001 #0.00001
        top: 'discriminator'
    discriminator:
        type: 'MSCN32'
        name: 'Dis'
        kwargs:
            numhid: 64
            use_bias: True
            outnum: 10 # 20
            leakage: 0.2
        epoch: 400
        param: '${root_dir}/${exp_dir}/${data.func}/params/${nets.discriminator.type}.${nets.discriminator.name}.${nets.discriminator.epoch}.params'
        save: '${root_dir}/${exp_dir}/${data.func}/params/${nets.discriminator.type}.${nets.discriminator.name}.${epoch}.params'
        optimizer: 'adam'
        optkwargs:
            learning_rate: 0.00001 #0.00001
    classifier:
        type: 'MSCN32'
        name: 'Cls'
        active: False
        kwargs:
            numhid: 64
            use_bias: True
            outnum: 10
            leakage: 0.0
        epoch: 10
        param: '${root_dir}/${exp_dir}/${data.func}/params/${nets.classifier.type}.${nets.classifier.name}.${nets.classifier.epoch}.params'
        save: '${root_dir}/${exp_dir}/${data.func}/params/${nets.classifier.type}.${nets.classifier.name}.${epoch}.params'
        optimizer: 'adam'
        optkwargs:
            learning_rate: 0.00001

log: '${root_dir}/${exp_dir}/${data.func}/log/${model}.log'
gen_freq: 1
genout: '${root_dir}/${exp_dir}/${data.func}/gen/${model}.${net}.${net_epoch}.${data_desc}.${iter}.${ftype}'

cmap: 'coldnhot'

pattern:
    type: 'pattern'
    name: 'linear'
    save: '${root_dir}/${exp_dir}/${data.func}/params/${net_type}.${net_name}.${pattern.name}.${fit_epoch}.${ase_epoch}.pattern.params'
    load: '${root_dir}/${exp_dir}/${data.func}/params/${net_type}.${net_name}.${pattern.name}.${pattern.start_epoch}.${pattern.aepoch}.pattern.params'
    output: '${root_dir}/${exp_dir}/${data.func}/rel/${pattern.type}/${model}.${net}.${net_epoch}.${pattern.name}.${pattern.start_epoch}.${data_desc}.${iter}.${ftype}'
    start_epoch: 0
    aepoch: 0
    nepochs: 10
    save_freq: 5
    optimizer: 'adam'
    optkwargs:
        learning_rate: 0.0001

explanation:
    kwargs:
        method: 'layerwise'
    desc: 'lrp'
    output: '${root_dir}/${exp_dir}/${data.func}/rel/${explanation.desc}/${model}.${net}.${net_epoch}.${data_desc}.${iter}.${ftype}'
