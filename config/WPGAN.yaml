root_dir: '/home/chrstphr/projects/ecGAN/result'
exp_dir: 'mnist_full_pos'
cls_dir: 'classify'

device: 'cpu'
device_id: 'auto'
debug: False

batch_size: 64
nepochs: 10000
start_epoch: 0
save_freq: 10

init: False

data:
  func: 'mnist'
  args: []
  kwargs:
    train: True
    ret_label: True
    bbox: [0,1]
    preload: True}
  bbox: [0,1]

model: 'WGAN'
nets:
  generator:
    type: 'SFC'
    name: 'Gen'
    kwargs:
      numhid: 64
      outact: 'relu'
      outnum: 784
    param: '${root_dir}/${exp_dir}/params/${model}.${nets.generator.type}.${nets.generator.name}.${start_epoch}.params'
    save: '${root_dir}/${exp_dir}/params/${model}.${nets.generator.type}.${nets.generator.name}.${epoch}.params'
    optimizer: 'rmsprop'
    optkwargs:
      learning_rate: 0.00005
  discriminator:
    type: 'SFC'
    name: 'Dis'
    kwargs:
      numhid: 64
      # outact: 'relu'
      outnum: 1
    param: '${root_dir}/${exp_dir}/params/${model}.${nets.discriminator.type}.${nets.discriminator.name}.${start_epoch}.params'
    save: '${root_dir}/${exp_dir}/params/${model}.${nets.discriminator.type}.${nets.discriminator.name}.${epoch}.params'
    optimizer: 'rmsprop'
    optkwargs:
      learning_rate: 0.00005
      clip_weights: 0.01
  classifier:
    type: 'SFC'
    name: 'Cls'
    kwargs:
      numhid: 64
      outact: 'relu'
      outnum: 10
    param: '${root_dir}/${exp_dir}/params/${model}.${nets.classifier.type}.${nets.classifier.name}.10.params'
    # save: '${root_dir}/${exp_dir}/params/${model}.${nets.classifier.type}.${nets.classifier.name}.${epoch}.params'

log: '${root_dir}/${exp_dir}/log/${model}.log'
gen_freq: 10
genout: '${root_dir}/${exp_dir}/gen/${model}.${nets.generator.type}.${epoch}.png'
ncritic: 5
explanation:
  method: 'dtd'
  top_net: 'classifier'
  # output: '${root_dir}/${exp_dir}/rel/${model}.${nets.discriminator.type}.${epoch}.${explanation.method}.${iter}.h5'
  output: NULL
  image:  '${root_dir}/${exp_dir}/rel/${model}.${nets.discriminator.type}.${epoch}.${explanation.method}.${data_desc}.${iter}.png'
  input:  '${root_dir}/${exp_dir}/rel/${model}.${data_desc}.${iter}.png'
