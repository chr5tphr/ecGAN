root_dir: '/home/chrstphr/projects/ecGAN/result'
exp_dir: 'mnist_cond_fm'
# cls_dir: 'classify'

device: 'gpu'
device_id: 'auto'
debug: False

batch_size: 64
nepochs: 1000
start_epoch: 0
save_freq: 5

init: False
feature_matching: True

data:
  func: 'mnist'
  args: []
  kwargs:
    train: True
    bbox: [0,1]
    labels: NULL
  bbox: [0,1]

model: 'CCGAN'
nets:
  generator:
    type: 'YSFC'
    name: 'Gen'
    kwargs:
      numhid: 512
      outact: 'relu'
      outnum: 784
    param: '${root_dir}/${exp_dir}/params/${model}.${nets.generator.type}.${nets.generator.name}.${start_epoch}.params'
    save: '${root_dir}/${exp_dir}/params/${model}.${nets.generator.type}.${nets.generator.name}.${epoch}.params'
    optimizer: 'adam'
    optkwargs:
      learning_rate: 0.0001
  discriminator:
    type: 'YSFC'
    name: 'Dis'
    kwargs:
      numhid: 512
      outact: NULL
      outnum: 11
    param: '${root_dir}/${exp_dir}/params/${model}.${nets.discriminator.type}.${nets.discriminator.name}.${start_epoch}.params'
    save: '${root_dir}/${exp_dir}/params/${model}.${nets.discriminator.type}.${nets.discriminator.name}.${epoch}.params'
    optimizer: 'adam'
    optkwargs:
      learning_rate: 0.0001
  # classifier:
  #   type: 'CPFC'
  #   kwargs: {'outact':'relu'}
  #   param: '${root_dir}/${cls_dir}/params/Classifier.${nets.classifier.type}.10.params'
    # save: '${root_dir}/${cls_dir}/params/${model}.${nets.classifier.type}.${epoch}.params'

log: '${root_dir}/${exp_dir}/log/${model}.log'
gen_freq: 5
genout: '${root_dir}/${exp_dir}/gen/${model}.${nets.generator.type}.${epoch}.png'
explanation:
  method: 'dtd'
  top_net: 'classifier'
  # output: '${root_dir}/${exp_dir}/rel/${model}.${nets.discriminator.type}.${epoch}.${explanation.method}.${iter}.h5'
  output: NULL
  image:  '${root_dir}/${exp_dir}/rel/${model}.${nets.discriminator.type}.${epoch}.${explanation.method}.${data_desc}.${iter}.png'
  input:  '${root_dir}/${exp_dir}/rel/${model}.${data_desc}.${iter}.png'
